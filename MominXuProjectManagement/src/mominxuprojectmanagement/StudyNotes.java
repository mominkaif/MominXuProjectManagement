/*
 * Author: David Xu
 * Date: 2022-05-12
 * UNIT 6 SUMMATIVE
 * Study Notes menu, JFrame that allows user to pick a topic to study from 7 choices
 * in a combo box, after selecting a topic, and pressing the GO button, the
 * text area on the right will be set to the topic info, read from a data files
 */
package mominxuprojectmanagement;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

/**
 *
 * @author kaifm
 */
public class StudyNotes extends javax.swing.JFrame {
    //encapsulate attributes
    private int totalNumTopics = 7; //there are 7 study topics
    //instantiate array of StudyTopics
    private StudyTopics[] topicsToStudy = new StudyTopics[totalNumTopics];
    //for main menu
    private MominXuProjectManagement mainWindow;

    /**
     * Creates new form StudyNotes
     */
    public StudyNotes(MominXuProjectManagement m) {
        initComponents();
        
        mainWindow = m;
        //call method to read from data file and store in array
        readData();
    }
    /**
     * readData method, tries to reference a file, attach a scanner, and reads 
     * the title of the topic, and the study material for the topic a total of 
     * seven times.
     */
    private void readData() {
        //arbitrary number, each "study material" for a topic in the data file
        //has 9 lines. Some topics will fill most of the nine lines while others
        //will barely fill any. This makes it easier to place information
        //in the array
        int numLines = 9;

        //declare variables
        String topicName;
        String studyMaterial = "";

        StudyTopics topic;

        //try-catch to read the file and store the info into an array
        try {
            //reference file
            File f = new File("src\\mominxuprojectmanagement\\study.txt");
            //attach scanner
            Scanner s = new Scanner(f);
            //loop a total of secen times for seven topics
            for (int i = 0; i < totalNumTopics; i++) {
                //first line is always the topic name
                topicName = s.nextLine();
                //loop a total of nine times to read all the study material
                //that coincides with the specific topic
                for (int j = 0; j < numLines; j++) {
                    //append next line
                    studyMaterial += s.nextLine() + "\n";
                }
                //instantiate StudyTopic object
                topic = new StudyTopics(i, topicName, studyMaterial);
                //store in index i, of the array
                topicsToStudy[i] = topic;
                //reset String so it does not append for every topic
                studyMaterial = "";
            }
        //otherwise file not found, print error
        } catch (FileNotFoundException e) {
            System.out.println("ERROR! " + e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtADisplayInfoTopic = new javax.swing.JTextArea();
        topicOption = new javax.swing.JComboBox<>();
        btnGo = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        jLabel1.setText("Study Notes");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Select a topic: ");

        txtADisplayInfoTopic.setColumns(20);
        txtADisplayInfoTopic.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtADisplayInfoTopic.setRows(5);
        txtADisplayInfoTopic.setText("Selected notes will appear here");
        jScrollPane1.setViewportView(txtADisplayInfoTopic);

        topicOption.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        topicOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Systems", "Measuring Success", "Intro to the SDLC", "Waterfall Model", "Gantt Chart", "Unified Modeling Language (UML)", "Other Helpful Info" }));
        topicOption.setToolTipText("");
        topicOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topicOptionActionPerformed(evt);
            }
        });

        btnGo.setBackground(new java.awt.Color(0, 250, 0));
        btnGo.setText("Go");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        back.setText("Back to Main Menu");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(topicOption, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnGo)
                                .addGap(47, 47, 47))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(topicOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(btnGo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(back)))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void topicOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topicOptionActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_topicOptionActionPerformed
    /**
     * Button to go back to main menu, set the main menu window visibility to true 
     * and this menu to false
     * @param evt - clicked button
     */
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        mainWindow.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_backActionPerformed
    /**
     * Go button, when user wants to see information from a chosen topic
     * See which topic user chose from combo box and display data
     * @param evt - clicked button
     */
    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        //switch statement, for every index of the combo box, display corresponding
        //toString of the element at the index
        switch (topicOption.getSelectedIndex()) {
            case 0 -> txtADisplayInfoTopic.setText(topicsToStudy[0].toString());
            case 1 -> txtADisplayInfoTopic.setText(topicsToStudy[1].toString());
            case 2 -> txtADisplayInfoTopic.setText(topicsToStudy[2].toString());
            case 3 -> txtADisplayInfoTopic.setText(topicsToStudy[3].toString());
            case 4 -> txtADisplayInfoTopic.setText(topicsToStudy[4].toString());
            case 5 -> txtADisplayInfoTopic.setText(topicsToStudy[5].toString());
            default -> txtADisplayInfoTopic.setText(topicsToStudy[6].toString());
        }

    }//GEN-LAST:event_btnGoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton btnGo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> topicOption;
    private javax.swing.JTextArea txtADisplayInfoTopic;
    // End of variables declaration//GEN-END:variables

}

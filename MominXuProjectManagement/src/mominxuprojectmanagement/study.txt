System
    Is a solution for a problem using software and hardware. 
    Key components of a system are: 
    the client (requests for a solution and provides money)
    analysts (gather and interpret data) 
    designers & developers (think and implement a solution to a task) 
    testers (test if solution works)
    users (the demographic using the system)


How to Measure Success
    Should solve original problem
    Is easy to maintain and manage
    Is scalable and dynamic to meet the needs of the client
    There is a efficient support system available to the client
    Is developed on time and is good to go
    Client is satisfied with the product



Intro Software Development Process
    High-quality software needs organization and rigorous planning through 
    diagrammatic conventions such as the waterfall model and the Gantt chart.






 
The Waterfall Model
    Dr Winston Royce developed the Waterfall Model. There are many phases in 
    this model. A mistake or realization in one phase will mean the developers 
    should backup, and return to work on the previous phase.
        -Problem Statement
        -Analysis
        -Design 
        -Implementation 
        -Integration /Test
        -Maintenance

Gantt Chart
    -Extremely helpful tool to visualize, track and schedule progress of projects.
    -Is a horizontal bar chart, where the y axis represents tasks, and the x axis 
    represents days. 
    -The red coloured bars represent work that still needs to be done. The blue 
    coloured ones represent completed. These bars will extend along the horizontal 
    axis for however many days it takes to complete. Also, the progress bars can 
    start on any day.
 

Unified Modeling Language (UML)
    When systems have bugs, they must be structured in a way so that future developers 
    can fix them long after the original ones have moved on. UML helps to visualize, 
    specify, and document parts of a system. It is an efficient way to describe complex 
    systems, much better understood than through normal descriptions.

 



Other Helpful Info
    Issues found earlier in the SDLC are much cheaper to fix than later on
    The cost of developing software is not evenly spread, sometimes maintenance 
    has the largest costs. 





